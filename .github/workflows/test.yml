name: Test Install

on:
  push:
  pull_request:

jobs:
  
  npm-install:
    name: npm - install dependency
    runs-on: ubuntu-latest
    steps:
      - name: Make URL
        id: url
        run: |
          echo "repo=${{ github.server_url }}/${{ github.repository }}.git#${{ github.sha }}" >> $GITHUB_OUTPUT
      - run: echo "${{ steps.url.outputs.repo }}"
      - run: |
          echo '{"name": "fake-package"}' > package.json
      - run: npm --version
      - run: npm install "${{ steps.url.outputs.repo }}"
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: find * -not -path '*/\.git/*' -path 'node_modules/package-prepare/*' | wc -l
        name: Count node_modules files
      - run: cat package.json
      - run: cat node_modules/package-prepare/output.txt
        name: cat output.txt

  clone-npm-install:
    name: npm - Initial setup install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm --version
      - run: npm install
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: cat output.txt
  
  npm-pack:
    name: npm - pack
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: npm --version
      - run: npm pack
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: cat output.txt

  yarn-add:
    name: yarn - install dependency
    runs-on: ubuntu-latest
    steps:
      - name: Make URL
        id: url
        run: |
          echo "repo=${{ github.server_url }}/${{ github.repository }}.git#${{ github.sha }}" >> $GITHUB_OUTPUT
      - run: echo "${{ steps.url.outputs.repo }}"
      - run: |
          echo '{"name": "fake-package"}' > package.json
      - run: yarn --version
      - run: yarn --color=always add "${{ steps.url.outputs.repo }}"
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: find * -not -path '*/\.git/*' -path 'node_modules/package-prepare/*' | wc -l
        name: Count node_modules files
      - run: cat package.json
      - run: cat node_modules/package-prepare/output.txt
        name: cat output.txt

  clone-yarn-install:
    name: yarn - Initial setup install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: yarn --version
      - run: yarn --color=always install
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: cat output.txt

  yarn-pack:
    name: yarn - pack
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: yarn --version
      - run: yarn --color=always pack
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: cat output.txt

  pnpm-add:
    name: pnpm - install dependency
    runs-on: ubuntu-latest
    steps:
      - name: Make URL
        id: url
        run: |
          echo "repo=${{ github.server_url }}/${{ github.repository }}.git#${{ github.sha }}" >> $GITHUB_OUTPUT
      - run: echo "${{ steps.url.outputs.repo }}"
      - run: |
          echo '{"name": "fake-package"}' > package.json
      - run: sudo npm -g install pnpm
      - run: pnpm --version
      - run: pnpm add "${{ steps.url.outputs.repo }}"
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: find * -not -path '*/\.git/*' -path 'node_modules/package-prepare/*' | wc -l
        name: Count node_modules files
      - run: cat package.json
      - run: cat node_modules/package-prepare/output.txt
        name: cat output.txt

  clone-pnpm-install:
    name: pnpm - Initial setup install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo npm -g install pnpm
      - run: pnpm --version
      - run: pnpm install
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: cat output.txt

  pnpm-pack:
    name: pnpm - pack
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: sudo npm -g install pnpm
      - run: pnpm --version
      - run: pnpm pack
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: cat output.txt

  yarn-pnp-add:
    name: yarn PnP - install dependency
    runs-on: ubuntu-latest
    steps:
      - name: Make URL
        id: url
        run: |
          echo "repo=${{ github.server_url }}/${{ github.repository }}.git#${{ github.sha }}" >> $GITHUB_OUTPUT
      - run: echo "${{ steps.url.outputs.repo }}"
      - run: |
          echo '{"name": "fake-package", "installConfig": {"pnp": true}}' > package.json
          echo 'nodeLinker: node-modules' > .yarnrc.yml
      - run: yarn --version
      - run: yarn --color=always add "${{ steps.url.outputs.repo }}"
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: find * -not -path '*/\.git/*' -path 'node_modules/package-prepare/*' | wc -l
        name: Count node_modules files
      - run: cat package.json
      - run: cat node_modules/package-prepare/output.txt
        name: cat output.txt

  yarn-2-add:
    name: yarn 2 - install dependency
    runs-on: ubuntu-latest
    steps:
      - name: Make URL
        id: url
        run: |
          echo "repo=${{ github.server_url }}/${{ github.repository }}.git#${{ github.sha }}" >> $GITHUB_OUTPUT
      - run: echo "${{ steps.url.outputs.repo }}"
      - run: |
          echo '{"name": "fake-package", "packageManager": "yarn@2.4.3"}' > package.json
          echo 'nodeLinker: node-modules' > .yarnrc.yml
      - run: |
          sudo corepack enable
          sudo corepack prepare yarn@stable --activate
      - run: yarn --version
      - run: yarn add package-prepare@"${{ steps.url.outputs.repo }}"
        env:
          FORCE_COLOR: true
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: find * -not -path '*/\.git/*' -path 'node_modules/package-prepare/*' | wc -l
        name: Count node_modules files
      - run: cat package.json
      - run: cat node_modules/package-prepare/output.txt
        name: cat output.txt

  yarn-3-add:
    name: yarn 3 - install dependency
    runs-on: ubuntu-latest
    steps:
      - name: Make URL
        id: url
        run: |
          echo "repo=${{ github.server_url }}/${{ github.repository }}.git#${{ github.sha }}" >> $GITHUB_OUTPUT
      - run: echo "${{ steps.url.outputs.repo }}"
      - run: |
          echo '{"name": "fake-package", "packageManager": "yarn@3.3.1"}' > package.json
          echo 'nodeLinker: node-modules' > .yarnrc.yml
      - run: |
          sudo corepack enable
          sudo corepack prepare yarn@stable --activate
      - run: yarn --version
      - run: yarn add package-prepare@"${{ steps.url.outputs.repo }}"
        env:
          FORCE_COLOR: true
      - run: find * -not -path '*/\.git/*'
        name: find *
      - run: find * -not -path '*/\.git/*' -path 'node_modules/package-prepare/*' | wc -l
        name: Count node_modules files
      - run: cat package.json
      - run: cat node_modules/package-prepare/output.txt
        name: cat output.txt
